{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"\ud83c\udf10 Proyecto de Ingesta, Limpieza y Enriquecimiento de Datos GlobalesExamina el Repositorio del proyecto","text":"<p>El proyecto integra tres fases principales en un entorno simulado de Big Data en la nube: ingesta, limpieza y enriquecimiento de datos. Utiliza <code>SQLite</code> como base de datos local simulando un almac\u00e9n anal\u00edtico, y <code>Python</code> como lenguaje principal para el procesamiento de datos. El flujo de trabajo se automatiza mediante <code>GitHub Actions</code> y se documenta con <code>MkDocs</code>.</p>"},{"location":"index.html#funcionalidades","title":"\ud83d\udd25 Funcionalidades:","text":"<p>\u2705 Realiza una solicitud <code>GET</code> para obtener datos de todos los pa\u00edses del mundo.</p> <p>\u2705 Almacena los datos en una base de datos SQLite.</p> <p>\u2705 Exporta los datos a formatos CSV y Excel para su an\u00e1lisis.</p> <p>\u2705 Limpia los datos, manejando valores nulos y datos duplicados.</p> <p>\u2705 Enriquecer cada pa\u00eds con su latitud y longitud usando la API de OpenCage.</p> <p>\u2705 Genera informes de auditor\u00eda detallados con el estado de cada proceso.</p>"},{"location":"index.html#estructura-del-proyecto","title":"\ud83d\udcc2 Estructura del Proyecto","text":"<pre><code>[bigdata-infrastructure]\n\u2502   README.md\n\u2502   requirements.txt\n\u2502   run.py\n\u2502\n\u251c\u2500\u2500\u2500docs\n\u2502       index.md\n\u2502       ingesta.md\n\u2502       limpieza.md\n\u2502       enrichment.md\n\u2502\n\u2514\u2500\u2500\u2500src\n    \u2502   ingestion.py\n    \u2502   cleaning.py\n    \u2502   enrichment.py\n    \u2502\n    \u2514\u2500\u2500\u2500static\n        \u251c\u2500\u2500\u2500auditoria\n        \u2502       ingestion_report.txt\n        \u2502       cleaning_report.txt\n        \u2502       enriched_report.txt\n        \u251c\u2500\u2500\u2500csv\n        \u2502       ingestion.csv\n        \u251c\u2500\u2500\u2500db\n        \u2502       ingestion.db\n        \u2514\u2500\u2500\u2500xlsx\n                ingestion.xlsx\n                cleaning.xlsx\n                enriched_data.xlsx\n</code></pre>"},{"location":"index.html#requisitos","title":"\ud83d\udee0\ufe0f Requisitos","text":"<p>Para ejecutar este proyecto necesitas tener instalado:</p> <ul> <li>Python 3.x</li> <li>SQLite3</li> <li>Bibliotecas de Python (ver <code>requirements.txt</code>) que incluyen:</li> <li><code>pandas</code></li> <li><code>requests</code></li> <li><code>openpyxl</code></li> <li><code>tqdm</code></li> </ul>"},{"location":"index.html#ejecucion-del-proyecto","title":"\ud83d\ude80 Ejecuci\u00f3n del Proyecto","text":"<p>Este script ejecuta en orden toda la rutina del programa:</p> <pre><code>python run.py\n</code></pre>"},{"location":"index.html#modelo-de-base-de-datos","title":"\ud83d\udcca Modelo de Base de Datos","text":""},{"location":"index.html#estructura-de-las-tablas","title":"\ud83e\udde9 Estructura de las tablas","text":"<p>Tabla <code>countries</code></p> <p>Contiene la informaci\u00f3n original obtenida desde la API.</p> <p>Tabla <code>countries_clean</code></p> <p>Contiene los datos luego de ser limpiados.</p> <p>Tabla <code>countries_enriched</code></p> <p>Contiene los datos enriquecidos con latitud y longitud.</p> <pre><code>CREATE TABLE IF NOT EXISTS countries (\n    pais TEXT,\n    capital TEXT,\n    region TEXT,\n    subregion TEXT,\n    poblacion INTEGER,\n    area REAL\n)\n</code></pre>"},{"location":"index.html#diagrama-mermaid-flujo-general","title":"\ud83e\udde0 Diagrama Mermaid \u2013 Flujo General","text":"<pre><code>flowchart TD\n    A[Ingesta API RESTCountries] --&gt; B[Guardar en SQLite y Excel]\n    B --&gt; C[Limpieza de Datos]\n    C --&gt; D[Guardar limpio en cleaning.xlsx y countries_clean]\n    D --&gt; E[Enriquecimiento con OpenCage]\n    E --&gt; F[Guardar enriquecido en enriched_data.xlsx y countries_enriched]</code></pre>"},{"location":"automation.html","title":"\u2699\ufe0f Automatizaci\u00f3n con GitHub Actions","text":"<p>Este proyecto integra un flujo de CI/CD automatizado mediante GitHub Actions para asegurar que cada push o actualizaci\u00f3n valide el proyecto y reconstruya la documentaci\u00f3n autom\u00e1ticamente.</p>"},{"location":"automation.html#archivo-yaml-del-workflow","title":"\ud83d\udcc4 Archivo YAML del Workflow","text":"<pre><code>name: Ingesti\u00f3n, Limpieza, Enrequicimiento, Auditoria y Documentaci\u00f3n\n\non:\n  push:\n    branches:\n      - main\n  schedule:\n    - cron: '0 * * * *'\n\njobs:\n  ingest_data:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.9'\n\n      - name: Install dependencies\n        run: |\n          pip install --upgrade pip\n          pip install requests pandas openpyxl\n\n      - name: Run ingestion script\n        run: python src/ingestion.py\n\n      - name: Upload ingestion results\n        uses: actions/upload-artifact@v4\n        with:\n          name: ingestion-results\n          path: |\n            src/static/auditoria/ingestion_report.txt\n            src/static/db/ingestion.db\n            src/static/csv/ingestion.csv\n            src/static/xlsx/ingestion.xlsx\n\n  clean_data:\n    needs: ingest_data\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.9'\n\n      - name: Install dependencies\n        run: |\n          pip install --upgrade pip\n          pip install pandas openpyxl\n\n      - name: Download ingestion results\n        uses: actions/download-artifact@v4\n        with:\n          name: ingestion-results\n          path: src/static/\n\n      - name: Run cleaning script\n        run: python src/cleaning.py\n\n      - name: Upload cleaning results\n        uses: actions/upload-artifact@v4\n        with:\n          name: cleaning-results\n          path: |\n            src/static/db/ingestion.db\n            src/static/auditoria/cleaning_report.txt\n            src/static/xlsx/cleaning.xlsx\n\n  enrich_data:\n      needs: clean_data\n      runs-on: ubuntu-latest\n      steps:\n        - name: Checkout code\n          uses: actions/checkout@v3\n\n        - name: Set up Python\n          uses: actions/setup-python@v4\n          with:\n            python-version: '3.9'\n\n        - name: Install dependencies\n          run: |\n            pip install pandas openpyxl requests tqdm\n\n        - name: Export secret to env\n          run: echo \"OPENCAGE_API_KEY=${{ secrets.OPENCAGE_API_KEY }}\" &gt;&gt; $GITHUB_ENV\n\n        - name: Run enrichment script\n          run: python src/enrichment.py\n\n        - name: Upload enrichment results\n          uses: actions/upload-artifact@v4\n          with:\n            name: enrichment-results\n            path: |\n              src/static/db/ingestion.db\n              src/static/auditoria/enriched_report.txt\n              src/static/xlsx/enriched_data.xlsx       \n\n  generate_report:\n    needs: enrich_data\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.9'\n\n      - name: Run report generation script\n        run: python src/report.py\n\n      - name: report audit markdown\n        uses: actions/upload-artifact@v4\n        with:\n          name: report-md\n          path: docs/report.md\n\n  build_docs:\n    needs: generate_report\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Set up Python\n        uses: actions/setup-python@v4\n        with:\n          python-version: '3.11'\n\n      - name: Install MkDocs and theme\n        run: |\n          pip install --upgrade pip\n          pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin mkdocs-glightbox\n\n      - name: Copiar archivos generados a docs/resultados\n        run: |\n          mkdir -p docs/resultados\n          cp src/static/auditoria/*.txt docs/resultados/\n          cp src/static/csv/*.csv docs/resultados/\n          cp src/static/xlsx/*.xlsx docs/resultados/\n          cp docs/report.md docs/resultados/\n\n      - name: Mostrar plugins activos\n        run: mkdocs build --verbose\n\n      - name: Build MkDocs site\n        run: mkdocs build\n\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          personal_token: ${{ secrets.GH_TOKEN }}\n          publish_dir: ./site\n\n      - name: Verificar contenido de site/\n        run: ls -R site/\n</code></pre>"},{"location":"automation.html#beneficios","title":"\u2705 Beneficios","text":"<ul> <li>Automatiza validaciones y construcci\u00f3n de la documentaci\u00f3n.</li> <li>Ayuda a detectar errores en <code>mkdocs.yml</code> o enlaces rotos.</li> <li>Ideal para integraci\u00f3n continua de entornos educativos o de datos.</li> </ul>"},{"location":"automation.html#archivos-relacionados","title":"\ud83d\udce6 Archivos relacionados","text":"<ul> <li><code>.github/workflows/bigdata.yml</code></li> <li><code>requirements.txt</code></li> <li><code>mkdocs.yml</code></li> </ul>"},{"location":"cleaning.html","title":"Limpieza","text":""},{"location":"cleaning.html#limpieza-de-datos","title":"\ud83e\uddfc Limpieza de Datos","text":"<p>Este m\u00f3dulo toma los datos generados en la fase de ingesta y aplica un proceso de limpieza y transformaci\u00f3n para prepararlos para an\u00e1lisis posteriores.</p>"},{"location":"cleaning.html#archivos-de-entrada-y-salida","title":"\ud83d\udcc1 Archivos de Entrada y Salida","text":"<ul> <li>Entrada: Base de datos <code>ingestion.db</code>, tabla <code>countries</code></li> <li>Salida:</li> <li><code>cleaning.xlsx</code>: archivo Excel con los datos limpios</li> <li><code>ingestion.db</code>, tabla <code>countries_clean</code>: versi\u00f3n limpia en SQLite</li> <li><code>cleaning_report.txt</code>: informe de auditor\u00eda</li> </ul>"},{"location":"cleaning.html#que-hace-este-script","title":"\ud83e\udde0 \u00bfQu\u00e9 hace este script?","text":"<p>\u2705 Elimina registros duplicados.</p> <p>\u2705 Llena valores nulos: - N\u00fameros: con la media de la columna - Textos: con el valor anterior no nulo (<code>ffill</code>)</p> <p>\u2705 Convierte tipos de datos (<code>poblacion</code>, <code>area</code>) a num\u00e9ricos.</p> <p>\u2705 Exporta los resultados a Excel y tambi\u00e9n los guarda como una nueva tabla en la base de datos (<code>countries_clean</code>).</p> <p>\u2705 Genera un reporte de auditor\u00eda con: - Cantidad de registros antes y despu\u00e9s de limpieza - Columnas con valores nulos - Cantidad de duplicados</p>"},{"location":"cleaning.html#estructura-de-la-tabla-countries_clean","title":"\ud83d\udccb Estructura de la Tabla <code>countries_clean</code>","text":"<p>Es id\u00e9ntica a <code>countries</code> pero con datos procesados y sin inconsistencias.</p>"},{"location":"cleaning.html#ejemplo-del-informe-cleaning_reporttxt","title":"\ud83d\udcdd Ejemplo del Informe <code>cleaning_report.txt</code>","text":"<pre><code>\ud83d\udccb Informe de Limpieza de Datos\n\nN\u00famero total de registros: 250\nN\u00famero de valores nulos por columna:\npais         0\ncapital     12\nregion       0\nsubregion    5\npoblacion    1\narea         0\ndtype: int64\nN\u00famero de registros duplicados: 0\n\n\u2705 N\u00famero de registros despu\u00e9s de limpieza: 250\n</code></pre>"},{"location":"cleaning.html#diagrama-mermaid-flujo-de-limpieza","title":"\ud83e\uddea Diagrama Mermaid \u2013 Flujo de Limpieza","text":"<pre><code>flowchart TD\n    A[Leer datos de countries en SQLite] --&gt; B[Eliminar duplicados]\n    B --&gt; C[Imputar valores nulos]\n    C --&gt; D[Convertir tipos: poblacion y area]\n    D --&gt; E[Guardar como cleaning.xlsx]\n    D --&gt; F[Guardar en tabla countries_clean]\n    F --&gt; G[Generar cleaning_report.txt]</code></pre>"},{"location":"cleaning.html#resultado","title":"\u2705 Resultado","text":"<p>Los datos ahora est\u00e1n preparados para ser enriquecidos o analizados, sin problemas de duplicaci\u00f3n ni valores faltantes cr\u00edticos.</p>"},{"location":"diagrams.html","title":"\ud83d\udcca Diagramas del Proyecto","text":"<ol> <li>Ingesta:</li> <li>Se conecta a la API p\u00fablica de RESTCountries.</li> <li>Se guarda en SQLite (<code>countries</code>) y se exporta en formatos CSV y Excel.</li> <li> <p>Se genera un informe (<code>ingestion_report.txt</code>).</p> </li> <li> <p>Limpieza:</p> </li> <li>Se eliminan duplicados.</li> <li>Se imputan nulos y se corrigen tipos de datos.</li> <li> <p>Se almacena el resultado limpio en <code>countries_clean</code> y Excel.</p> </li> <li> <p>Enriquecimiento:</p> </li> <li>Usa la API de OpenCage para obtener coordenadas por capital.</li> <li>A\u00f1ade columnas de latitud y longitud.</li> <li> <p>Se guarda como <code>countries_enriched</code> en SQLite y Excel.</p> </li> <li> <p>Flujo Secuencial:</p> </li> <li>Cada fase depende de la anterior.</li> <li>Los reportes permiten trazabilidad del estado de los datos.</li> </ol> GeneralIngestaLimpiezaEnriquecimientoEntidad-Relaci\u00f3nResumen <pre><code>graph TD\n    A1[API RESTCountries] --&gt; A2[Extraer datos]\n    A2 --&gt; A3[Guardar en SQLite]\n    A3 --&gt; A4[Exportar a Excel y CSV]\n    A4 --&gt; A5[Generar reporte]\n\n    A5 --&gt; B1[Leer countries]\n    B1 --&gt; B2[Eliminar duplicados]\n    B2 --&gt; B3[Imputar nulos]\n    B3 --&gt; B4[Convertir tipos]\n    B4 --&gt; B5[Guardar en cleaning y Excel]\n    B5 --&gt; B6[Generar reporte limpieza]\n\n    B6 --&gt; C1[Leer cleaning.xlsx]\n    C1 --&gt; C2[Leer capitales]\n    C2 --&gt; C3{Capital valida?}\n    C3 -- Si --&gt; C4[API OpenCage]\n    C4 --&gt; C5[A\u00f1adir coords]\n    C5 --&gt; C6[Guardar enriched]\n    C6 --&gt; C7[Reporte enriquecimiento]\n    C3 -- No --&gt; CZ[Omitir registro]</code></pre> <pre><code>graph TD\n    A[Solicitar API RESTCountries] --&gt; B[Extraer campos]\n    B --&gt; C[Guardar CSV y Excel]\n    C --&gt; D[Insertar en SQLite]\n    D --&gt; E[Generar reporte ingesta]</code></pre> <pre><code>graph TD\n    A[Leer tabla countries] --&gt; B[Eliminar duplicados]\n    B --&gt; C[Imputar nulos]\n    C --&gt; D[Convertir poblacion y area]\n    D --&gt; E[Guardar cleaning.xlsx y tabla]\n    E --&gt; F[Generar reporte limpieza]</code></pre> <pre><code>graph TD\n    A[Cargar cleaning.xlsx] --&gt; B[Leer columna capital]\n    B --&gt; C{Capital v\u00e1lida?}\n    C -- S\u00ed --&gt; D[Consultar API OpenCage]\n    D --&gt; E[A\u00f1adir latitud y longitud]\n    E --&gt; F[Guardar en enriched_data.xlsx y countries_enriched]\n    F --&gt; G[Generar enriched_report.txt]\n    C -- No --&gt; H[Omitir enriquecimiento]</code></pre> <pre><code>erDiagram\n    countries {\n        TEXT pais\n        TEXT capital\n        TEXT region\n        TEXT subregion\n        INTEGER poblacion\n        REAL area\n    }\n\n    countries_clean {\n        TEXT pais\n        TEXT capital\n        TEXT region\n        TEXT subregion\n        INTEGER poblacion\n        REAL area\n    }\n\n    countries_enriched {\n        TEXT pais\n        TEXT capital\n        TEXT region\n        TEXT subregion\n        INTEGER poblacion\n        REAL area\n        REAL latitud\n        REAL longitud\n    }\n\n    countries ||--|| countries_clean : limpieza\n    countries_clean ||--|| countries_enriched : enriquecimiento</code></pre> <pre><code>graph TD\n    A[Ingesta API RESTCountries] --&gt; B[Guardar en SQLite y Excel]\n    B --&gt; C[Limpieza de Datos]\n    C --&gt; D[Guardar en cleaning.xlsx y countries_clean]\n    D --&gt; E[Enriquecimiento geogr\u00e1fico]\n    E --&gt; F[Guardar en enriched_data.xlsx y countries_enriched]</code></pre>"},{"location":"enrichment.html","title":"Enriquecimiento","text":""},{"location":"enrichment.html#enriquecimiento-de-datos-geograficos","title":"\ud83c\udf0d Enriquecimiento de Datos Geogr\u00e1ficos","text":"<p>Este script toma un archivo de datos previamente limpiado y lo enriquece geogr\u00e1ficamente utilizando la API de OpenCage para obtener coordenadas (latitud y longitud) de la capital de cada pa\u00eds.</p>"},{"location":"enrichment.html#estructura-de-archivos","title":"\ud83d\udcc1 Estructura de Archivos","text":"<ul> <li>Archivo de entrada (limpio) : <code>src/static/xlsx/cleaning.xlsx</code></li> <li>Archivo enriquecido de salida : <code>src/static/xlsx/enriched_data.xlsx</code></li> <li>Base de datos de salida : <code>src/static/db/ingestion.db</code></li> <li>Reporte de auditor\u00eda : <code>src/static/auditoria/enriched_report.txt</code></li> </ul>"},{"location":"enrichment.html#que-hace-el-script","title":"\ud83e\udde0 \u00bfQu\u00e9 hace el script?","text":"<p>\u2705 Lee los datos del archivo <code>cleaning.xlsx</code>.</p> <p>\u2705 Consulta la API de OpenCage por cada capital del dataset (respetando un l\u00edmite de 1 solicitud por segundo).</p> <p>\u2705 Agrega dos nuevas columnas: * <code>latitud</code> * <code>longitud</code></p> <p>\u2705 Exporta el resultado enriquecido a: * Excel (<code>enriched_data.xlsx</code>) * Base de datos SQLite (<code>countries_enriched</code>) * Informe de auditor\u00eda (<code>enriched_report.txt</code>)</p>"},{"location":"enrichment.html#uso-de-la-api-de-opencage","title":"\u2699\ufe0f Uso de la API de OpenCage","text":"<p>Este script realiza una llamada <code>GET</code> por cada capital del mundo a:</p> <pre><code>https://api.opencagedata.com/geocode/v1/json\n</code></pre> <p>La solicitud se realiza con un retraso (<code>delay</code>) de 1 segundo para cumplir con la cuota gratuita de la API.</p>"},{"location":"enrichment.html#reporte-generado","title":"\ud83d\udcca Reporte generado","text":"<p>Ejemplo de contenido del <code>enriched_report.txt</code>:</p> <pre><code>\ud83d\udccb Informe de Enriquecimiento de Datos\n\n\ud83d\udd22 Registros base: 250\n\ud83c\udf0d Enriquecimiento con coordenadas geogr\u00e1ficas aplicado.\n\ud83d\udd22 Registros finales: 250\n</code></pre>"},{"location":"enrichment.html#resultado-final","title":"\u2705 Resultado Final","text":"<p>El script genera logs informativos a medida que procesa los datos:</p> <pre><code>\ud83c\udf0d Enriqueciendo capitales: 30% completado...\n\u2705 Dataset enriquecido exportado a: enriched_data.xlsx\n\ud83d\uddc3\ufe0f Datos exportados a la tabla 'countries_enriched'\n</code></pre>"},{"location":"enrichment.html#archivos-generados","title":"\ud83d\udcce Archivos Generados","text":"<ul> <li>Excel Enriquecido</li> <li>Base de Datos SQLite</li> <li>Reporte de Auditor\u00eda</li> </ul>"},{"location":"enrichment.html#diagrama-del-proceso-de-enriquecimiento","title":"\ud83e\udde0 Diagrama del Proceso de Enriquecimiento","text":"<pre><code>flowchart TD\n    A[Inicio del Proceso] --&gt; B[Cargar archivo cleaning.xlsx]\n    B --&gt; C[Leer columna capital]\n    C --&gt; D{\u00bfCapital existe?}\n    D -- S\u00ed --&gt; E[Consultar API OpenCage por cada capital]\n    E --&gt; F[A\u00f1adir latitud y longitud]\n    F --&gt; G[Agregar columnas al DataFrame]\n    G --&gt; H[Exportar a enriched_data.xlsx]\n    G --&gt; I[Guardar en tabla countries_enriched de SQLite]\n    G --&gt; J[Generar enriched_report.txt]\n    J --&gt; K[Fin del proceso]\n    D -- No --&gt; Z[Abortar enriquecimiento]</code></pre>"},{"location":"ingestion.html","title":"Ingesta","text":""},{"location":"ingestion.html#ingesta-de-datos-desde-api-publica","title":"\ud83c\udf0d Ingesta de Datos desde API P\u00fablica","text":"<p>Este m\u00f3dulo permite la recolecci\u00f3n de datos desde la API RESTCountries, que proporciona informaci\u00f3n detallada de todos los pa\u00edses del mundo.</p>"},{"location":"ingestion.html#que-hace-este-script","title":"\ud83e\udde0 \u00bfQu\u00e9 hace este script?","text":"<p>\u2705 Realiza una solicitud HTTP GET a la API <code>https://restcountries.com/v3.1/all</code>.</p> <p>\u2705 Extrae los siguientes campos para cada pa\u00eds: - Nombre com\u00fan (<code>pais</code>) - Capital - Regi\u00f3n - Subregi\u00f3n - Poblaci\u00f3n - \u00c1rea</p> <p>\u2705 Guarda los datos en: - Base de datos SQLite (tabla <code>countries</code>) - Archivo CSV (<code>ingestion.csv</code>) - Archivo Excel (<code>ingestion.xlsx</code>)</p> <p>\u2705 Genera un informe de auditor\u00eda (<code>ingestion_report.txt</code>) con la cantidad total de pa\u00edses extra\u00eddos y las columnas incluidas.</p>"},{"location":"ingestion.html#archivos-generados","title":"\ud83d\udcc1 Archivos Generados","text":"<ul> <li><code>src/static/csv/ingestion.csv</code></li> <li><code>src/static/xlsx/ingestion.xlsx</code></li> <li><code>src/static/db/ingestion.db</code></li> <li><code>src/static/auditoria/ingestion_report.txt</code></li> </ul>"},{"location":"ingestion.html#estructura-de-la-tabla-countries","title":"\ud83d\udccb Estructura de la Tabla <code>countries</code>","text":"<pre><code>CREATE TABLE countries (\n    pais TEXT,\n    capital TEXT,\n    region TEXT,\n    subregion TEXT,\n    poblacion INTEGER,\n    area REAL\n);\n</code></pre>"},{"location":"ingestion.html#ejemplo-de-fila","title":"\ud83d\udcdd Ejemplo de Fila","text":"pais capital region subregion poblacion area Colombia Bogot\u00e1 Americas South America 50882884 1141748"},{"location":"ingestion.html#diagrama-mermaid-flujo-de-ingesta","title":"\ud83e\uddea Diagrama Mermaid \u2013 Flujo de Ingesta","text":"<pre><code>flowchart TD\n    A[Solicitar datos de API RESTCountries] --&gt; B[Extraer atributos clave]\n    B --&gt; C[Guardar en archivo CSV y Excel]\n    C --&gt; D[Guardar en tabla countries de SQLite]\n    D --&gt; E[Generar archivo de auditor\u00eda]</code></pre>"},{"location":"ingestion.html#resultado","title":"\u2705 Resultado","text":"<p>Una vez finalizada la ingesta, los datos est\u00e1n disponibles para el siguiente paso: limpieza.</p>"},{"location":"proyect.html","title":"Introducci\u00f3n","text":""},{"location":"proyect.html#documento-de-arquitectura-del-proyecto-integrador-de-big-data","title":"\ud83d\udcd8 Documento de Arquitectura del Proyecto Integrador de Big Data","text":""},{"location":"proyect.html#1-introduccion-y-descripcion-global-de-la-arquitectura","title":"1. Introducci\u00f3n y Descripci\u00f3n Global de la Arquitectura","text":"<p>El proyecto integra tres fases principales en un entorno simulado de Big Data en la nube: ingesta, limpieza y enriquecimiento de datos. Utiliza <code>SQLite</code> como base de datos local simulando un almac\u00e9n anal\u00edtico, y <code>Python</code> como lenguaje principal para el procesamiento de datos. El flujo de trabajo se automatiza mediante <code>GitHub Actions</code> y se documenta con <code>MkDocs</code>.</p>"},{"location":"proyect.html#2-diagramas-de-flujo-y-arquitectura","title":"2. Diagramas de Flujo y Arquitectura","text":"<p>Diagrama 1: Flujo General del Proyecto</p> <ul> <li>Desde la API p\u00fablica <code>restcountries.com</code>, se extrae la informaci\u00f3n de pa\u00edses.</li> <li>Los datos son almacenados en SQLite (<code>countries</code>).</li> <li>Luego se realiza la limpieza y se guarda en <code>countries_clean</code>.</li> <li>Finalmente, se enriquecen con coordenadas geogr\u00e1ficas usando la API de OpenCage y se guarda en <code>countries_enriched</code>.</li> </ul> <p>Diagrama 2: Proceso de Enriquecimiento</p> <ul> <li>Entrada: <code>cleaning.xlsx</code> \u2192 Proceso de geolocalizaci\u00f3n por capital \u2192 Salida: <code>enriched_data.xlsx</code> y <code>countries_enriched</code>.</li> </ul> <p>\u2705 Puedo ayudarte a generar estos diagramas con base en esta estructura si lo deseas.</p>"},{"location":"proyect.html#3-explicacion-detallada-de-componentes","title":"3. Explicaci\u00f3n Detallada de Componentes","text":""},{"location":"proyect.html#ingesta","title":"\ud83d\udd39 Ingesta","text":"<p>-Fuente: API <code>https://restcountries.com/v3.1/all</code></p> <p>-Herramientas: <code>requests</code>, <code>pandas</code>, <code>sqlite3</code></p> <p>-Salida: <code>ingestion.db</code>, <code>ingestion.csv</code>, <code>ingestion.xlsx</code>, <code>ingestion_report.txt</code></p>"},{"location":"proyect.html#limpieza","title":"\ud83d\udd39 Limpieza","text":"<ul> <li>Elimina duplicados y rellena nulos seg\u00fan el tipo de dato.</li> <li>Guarda resultados en <code>cleaning.xlsx</code> y tabla <code>countries_clean</code>.</li> </ul>"},{"location":"proyect.html#enriquecimiento","title":"\ud83d\udd39 Enriquecimiento","text":"<ul> <li>Uso de API <code>OpenCageData</code> para agregar latitud y longitud por capital.</li> <li>Resultado: tabla <code>countries_enriched</code> y Excel <code>enriched_data.xlsx</code>.</li> </ul>"},{"location":"proyect.html#4-modelo-de-datos","title":"4. Modelo de Datos","text":"<p>Tablas:</p> <p>-<code>countries</code>: datos en crudo.</p> <p>-<code>countries_clean</code>: despu\u00e9s de limpieza.</p> <p>-<code>countries_enriched</code>: con latitud y longitud.</p> <p>Relaciones:</p> <ul> <li>Todas las tablas comparten el campo clave <code>pais</code>.</li> </ul> <p>\u2705 Te puedo generar un diagrama ER (Entidad-Relaci\u00f3n) que muestre esta evoluci\u00f3n de los datos.</p>"},{"location":"proyect.html#5-justificacion-de-herramientas","title":"5. Justificaci\u00f3n de Herramientas","text":"<p>-SQLite: ligero, ideal para simulaci\u00f3n local y consultas anal\u00edticas.</p> <p>-Pandas: procesamiento flexible y potente de datos.</p> <p>-Requests: extracci\u00f3n directa desde APIs REST.</p> <p>-GitHub Actions: permite automatizaci\u00f3n continua del flujo ETL.</p> <p>-MkDocs: ideal para documentaci\u00f3n estructurada del proyecto.</p>"},{"location":"proyect.html#6-simulacion-del-entorno-en-la-nube","title":"6. Simulaci\u00f3n del Entorno en la Nube","text":"<p>Aunque no se ejecuta en una nube real como AWS o GCP, el entorno simulado replica sus fases:</p> <ul> <li>Almacenamiento en SQLite como si fuera un almac\u00e9n anal\u00edtico.</li> <li>Automatizaci\u00f3n y despliegue mediante GitHub Actions.</li> <li>Visualizaci\u00f3n estructurada con MkDocs como portal web de documentaci\u00f3n.</li> </ul>"},{"location":"proyect.html#7-flujo-de-datos-y-automatizacion","title":"7. Flujo de Datos y Automatizaci\u00f3n","text":"<p>Desde <code>main.py</code> o <code>run.py</code>, puede ejecutarse el pipeline completo:</p> <p>1.<code>ingestion.py</code> \u2192 genera <code>countries</code></p> <p>2.<code>cleaning.py</code> \u2192 transforma en <code>countries_clean</code></p> <p>3.<code>enrichment.py</code> \u2192 finaliza en <code>countries_enriched</code></p> <p>Cada script genera reportes de auditor\u00eda para trazabilidad.</p>"},{"location":"proyect.html#8-conclusiones-y-recomendaciones","title":"8. Conclusiones y Recomendaciones","text":"<p>Beneficios:</p> <ul> <li>Flujo estructurado y automatizado.</li> <li>Datos enriquecidos para an\u00e1lisis geogr\u00e1fico.</li> <li>Documentaci\u00f3n reproducible y clara.</li> </ul> <p>Limitaciones:</p> <ul> <li>No hay paralelizaci\u00f3n ni procesamiento distribuido (sin Spark en producci\u00f3n).</li> <li>Simulaci\u00f3n local, no cloud-native real.</li> </ul> <p>Recomendaciones:</p> <ul> <li>Implementar el mismo flujo en AWS con S3 + Glue + Athena.</li> <li>Agregar validaciones m\u00e1s complejas.</li> <li>Considerar Spark para procesamiento a gran escala.</li> </ul>"},{"location":"report.html","title":"\ud83d\udccb Informe Consolidado de Auditor\u00eda","text":""},{"location":"report.html#ingesta","title":"\ud83d\udd39 Ingesta","text":"<pre><code>\ud83d\udccb Informe de Ingesta Global de Pa\u00edses\n\n\ud83c\udf0d Total pa\u00edses: 250\n\ud83d\udcdd Columnas: pais, capital, region, subregion, poblacion, area\n</code></pre>"},{"location":"report.html#limpieza","title":"\ud83d\udd39 Limpieza","text":"<pre><code>\ud83d\udccb **Informe de Limpieza de Datos**\n\nN\u00famero total de registros: 250\nN\u00famero de valores nulos por columna:\npais         0\ncapital      4\nregion       0\nsubregion    5\npoblacion    0\narea         0\ndtype: int64\nN\u00famero de registros duplicados: 0\n\n\u2705 N\u00famero de registros despu\u00e9s de limpieza: 250\n</code></pre>"},{"location":"report.html#enriquecimiento","title":"\ud83d\udd39 Enriquecimiento","text":"<pre><code>\ud83d\udccb **Informe de Enriquecimiento de Datos**\n\n\ud83d\udd22 Registros base: 250\n\ud83c\udf0d Enriquecimiento con coordenadas geogr\u00e1ficas aplicado.\n\ud83d\udd22 Registros finales: 250\n</code></pre>"},{"location":"structure_db.html","title":"\ud83d\uddc3\ufe0f Estructura de la Base de Datos <code>ingestion.db</code>","text":"<p>La base de datos contiene tres tablas principales que representan el flujo completo: desde los datos crudos hasta su versi\u00f3n enriquecida con coordenadas geogr\u00e1ficas.</p>"},{"location":"structure_db.html#tabla-countries-datos-crudos-desde-la-api-restcountries","title":"\ud83d\udd39 Tabla <code>countries</code> (datos crudos desde la API RESTCountries)","text":"Campo Tipo Descripci\u00f3n pais TEXT Nombre com\u00fan del pa\u00eds capital TEXT Capital del pa\u00eds region TEXT Regi\u00f3n general (ej: Americas) subregion TEXT Subregi\u00f3n m\u00e1s espec\u00edfica poblacion INTEGER N\u00famero de habitantes area REAL \u00c1rea total del pa\u00eds (km\u00b2)"},{"location":"structure_db.html#tabla-countries_clean-despues-de-limpieza","title":"\ud83d\udd39 Tabla <code>countries_clean</code> (despu\u00e9s de limpieza)","text":"Campo Tipo Descripci\u00f3n pais TEXT Nombre com\u00fan del pa\u00eds (limpio) capital TEXT Capital (rellenada si estaba vac\u00eda) region TEXT Regi\u00f3n subregion TEXT Subregi\u00f3n poblacion INTEGER Poblaci\u00f3n con valores corregidos area REAL \u00c1rea con datos num\u00e9ricos v\u00e1lidos"},{"location":"structure_db.html#tabla-countries_enriched-con-coordenadas-geograficas","title":"\ud83d\udd39 Tabla <code>countries_enriched</code> (con coordenadas geogr\u00e1ficas)","text":"Campo Tipo Descripci\u00f3n pais TEXT Nombre com\u00fan del pa\u00eds capital TEXT Capital region TEXT Regi\u00f3n subregion TEXT Subregi\u00f3n poblacion INTEGER Poblaci\u00f3n area REAL \u00c1rea (km\u00b2) latitud REAL Coordenada geogr\u00e1fica: latitud longitud REAL Coordenada geogr\u00e1fica: longitud"},{"location":"structure_db.html#diagrama-de-clases-y-flujo-de-proceso","title":"\ud83e\udde0 Diagrama de Clases y Flujo de Proceso","text":"<pre><code>classDiagram\n    class Countries {\n        +TEXT pais\n        +TEXT capital\n        +TEXT region\n        +TEXT subregion\n        +INTEGER poblacion\n        +REAL area\n    }\n\n    class CountriesClean {\n        +TEXT pais\n        +TEXT capital\n        +TEXT region\n        +TEXT subregion\n        +INTEGER poblacion\n        +REAL area\n    }\n\n    class CountriesEnriched {\n        +TEXT pais\n        +TEXT capital\n        +TEXT region\n        +TEXT subregion\n        +INTEGER poblacion\n        +REAL area\n        +REAL latitud\n        +REAL longitud\n    }\n\n    Countries --&gt; CountriesClean : Limpieza\n    CountriesClean --&gt; CountriesEnriched : Enriquecimiento</code></pre>"},{"location":"structure_db.html#diagrama-de-flujo-del-proceso","title":"\ud83d\udd04 Diagrama de Flujo del Proceso","text":"<pre><code>flowchart TD\n    A[Ingesta desde RESTCountries API] --&gt; B[Guardar en tabla countries]\n    B --&gt; C[Limpieza de datos]\n    C --&gt; D[Guardar en tabla countries_clean]\n    D --&gt; E[Consultar API OpenCage por capital]\n    E --&gt; F[Guardar coordenadas en countries_enriched]</code></pre>"},{"location":"resultados/report.html","title":"\ud83d\udccb Informe Consolidado de Auditor\u00eda","text":""},{"location":"resultados/report.html#ingesta","title":"\ud83d\udd39 Ingesta","text":"<pre><code>\ud83d\udccb Informe de Ingesta Global de Pa\u00edses\n\n\ud83c\udf0d Total pa\u00edses: 250\n\ud83d\udcdd Columnas: pais, capital, region, subregion, poblacion, area\n</code></pre>"},{"location":"resultados/report.html#limpieza","title":"\ud83d\udd39 Limpieza","text":"<pre><code>\ud83d\udccb **Informe de Limpieza de Datos**\n\nN\u00famero total de registros: 250\nN\u00famero de valores nulos por columna:\npais         0\ncapital      4\nregion       0\nsubregion    5\npoblacion    0\narea         0\ndtype: int64\nN\u00famero de registros duplicados: 0\n\n\u2705 N\u00famero de registros despu\u00e9s de limpieza: 250\n</code></pre>"},{"location":"resultados/report.html#enriquecimiento","title":"\ud83d\udd39 Enriquecimiento","text":"<pre><code>\ud83d\udccb **Informe de Enriquecimiento de Datos**\n\n\ud83d\udd22 Registros base: 250\n\ud83c\udf0d Enriquecimiento con coordenadas geogr\u00e1ficas aplicado.\n\ud83d\udd22 Registros finales: 250\n</code></pre>"}]}